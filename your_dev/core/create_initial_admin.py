import os

from sqlalchemy import select
from sqlalchemy.ext.asyncio import AsyncSession

from your_dev.core.auth import hash_password
from your_dev.core.database import get_async_db
from your_dev.models.users import User, AdminProfile
from your_dev.core.logger import logger


INITIAL_PROFILE_DATA = {
    'name': '–ò–ù–ù–û–ö–ï–ù–¢–ò–ô –ú–û–¢–†–ò–ô',
    'title': 'üêç PYTHON FULL-STACK DEVELOPER üêç',
    'slogan': 'üí° –ü—Ä–µ–≤—Ä–∞—â–∞—é –∏–¥–µ–∏ –≤ —Ä–∞–±–æ—Ç–∞—é—â–∏–µ —Ä–µ—à–µ–Ω–∏—è',
    'about': ('–ó–∞ 2 –≥–æ–¥–∞ –ø–æ–≥—Ä—É–∑–∏–ª—Å—è –≤ Python-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É, –ø—Ä–æ—à–µ–ª –ø—É—Ç—å –æ—Ç '
              '–ø–µ—Ç-–ø—Ä–æ–µ–∫—Ç–æ–≤ –¥–æ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏. –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—Å—å –Ω–∞ '
              '—Å–æ–∑–¥–∞–Ω–∏–∏ web-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π (–±—ç–∫–µ–Ω–¥ - FastAPI, Flask, '
              'Django, —Ñ—Ä–æ–Ω—Ç –Ω–∞ —à–∞–±–ª–æ–Ω–∞—Ö), API –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏. '
              '–í–µ—Ä—é –≤ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–æ–¥ –∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ.'),
    'stats': {
        '–æ–ø—ã—Ç –≤ IT': '2 –≥–æ–¥–∞',
        '–∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏–π –æ–ø—ã—Ç': '1 –≥–æ–¥',
        '–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤': '35+',
        'drunk coffee': '‚ôæÔ∏è',
    },
    'contacts': {
        'telegram': {'url': 'https://t.me/kentiy2717', 'text': '@kentiy2717', 'icon': 'fab fa-telegram'},
        'email': {'url': 'mailto:kentiy93@gmail.com', 'text': 'kentiy93@gmail.com', 'icon': 'fas fa-rocket'},
        'github': {'url': 'https://github.com/Kentiy2717', 'text': 'Kentiy2717', 'icon': 'fab fa-github'},
        'hh': {'url': '#', 'text': '–†–ï–ó–Æ–ú–ï', 'icon': 'fas fa-briefcase'}
    }
}


async def create_initial_admin():
    db: AsyncSession = get_async_db()
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∞–¥–º–∏–Ω
        existing_admin = await db.scalar(select(User)
                                         .where(User.role == 'admin'))
        if existing_admin:
            logger.info('‚úÖ –ê–¥–º–∏–Ω —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
            return

        # –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∞
        admin_user = User(
            email=os.getenv('INITIAL_ADMIN_EMAIL'),
            first_name='–ò–Ω–Ω–æ–∫–µ–Ω—Ç–∏–π',
            middle_name='–ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á',
            last_name='–ú–æ—Ç—Ä–∏–π',
            hashed_password=hash_password(os.getenv('INITIAL_ADMIN_PASSWORD')),
            role='admin'
        )
        db.add(admin_user)
        db.flush()  # –ü–æ–ª—É—á–∞–µ–º ID

        # –°–æ–∑–¥–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å –∞–¥–º–∏–Ω–∞
        admin_profile = AdminProfile(
            user_id=admin_user.id,
            name_for_index=INITIAL_PROFILE_DATA['name'],
            title=INITIAL_PROFILE_DATA['title'],
            slogan=INITIAL_PROFILE_DATA['slogan'],
            about=INITIAL_PROFILE_DATA['about'],
            stats=INITIAL_PROFILE_DATA['stats'],
            contacts=INITIAL_PROFILE_DATA['contacts'],
        )

        db.add(admin_profile)
        await db.commit()
        logger.info('‚úÖ –ê–¥–º–∏–Ω —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω')

    except Exception as e:
        logger.error(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞–¥–º–∏–Ω–∞: {e}')
        await db.rollback()
